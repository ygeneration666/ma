<?php

namespace Proxies\__CG__\Mautic\LeadBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Lead extends \Mautic\LeadBundle\Entity\Lead implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'availableSocialFields', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'id', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'owner', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'points', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'pointsChangeLog', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'doNotEmail', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'ipAddresses', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'lastActive', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'internal', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'socialCache', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'updatedFields', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'color', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'newlyCreated', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'dateIdentified', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'notes', 'fields', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'preferredProfileImage', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'wasAnonymous', 'imported', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'tags', 'changes');
        }

        return array('__isInitialized__', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'availableSocialFields', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'id', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'owner', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'points', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'pointsChangeLog', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'doNotEmail', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'ipAddresses', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'lastActive', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'internal', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'socialCache', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'updatedFields', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'color', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'newlyCreated', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'dateIdentified', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'notes', 'fields', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'preferredProfileImage', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'wasAnonymous', 'imported', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\Lead' . "\0" . 'tags', 'changes');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Lead $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function convertToArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'convertToArray', array());

        return parent::convertToArray();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner(\Mautic\UserBundle\Entity\User $owner = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', array($owner));

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', array());

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function addIpAddress(\Mautic\CoreBundle\Entity\IpAddress $ipAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIpAddress', array($ipAddress));

        return parent::addIpAddress($ipAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function removeIpAddress(\Mautic\CoreBundle\Entity\IpAddress $ipAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeIpAddress', array($ipAddress));

        return parent::removeIpAddress($ipAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getIpAddresses()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIpAddresses', array());

        return parent::getIpAddresses();
    }

    /**
     * {@inheritDoc}
     */
    public function getName($lastFirst = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array($lastFirst));

        return parent::getName($lastFirst);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompany()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompany', array());

        return parent::getCompany();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function getFieldValue($field, $group = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFieldValue', array($field, $group));

        return parent::getFieldValue($field, $group);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrimaryIdentifier($lastFirst = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrimaryIdentifier', array($lastFirst));

        return parent::getPrimaryIdentifier($lastFirst);
    }

    /**
     * {@inheritDoc}
     */
    public function getSecondaryIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSecondaryIdentifier', array());

        return parent::getSecondaryIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', array());

        return parent::getLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function addToPoints($points)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addToPoints', array($points));

        return parent::addToPoints($points);
    }

    /**
     * {@inheritDoc}
     */
    public function setPoints($points)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoints', array($points));

        return parent::setPoints($points);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoints()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoints', array());

        return parent::getPoints();
    }

    /**
     * {@inheritDoc}
     */
    public function addPointsChangeLogEntry($type, $name, $action, $pointsDelta, \Mautic\CoreBundle\Entity\IpAddress $ip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPointsChangeLogEntry', array($type, $name, $action, $pointsDelta, $ip));

        return parent::addPointsChangeLogEntry($type, $name, $action, $pointsDelta, $ip);
    }

    /**
     * {@inheritDoc}
     */
    public function addPointsChangeLog(\Mautic\LeadBundle\Entity\PointsChangeLog $pointsChangeLog)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPointsChangeLog', array($pointsChangeLog));

        return parent::addPointsChangeLog($pointsChangeLog);
    }

    /**
     * {@inheritDoc}
     */
    public function removePointsChangeLog(\Mautic\LeadBundle\Entity\PointsChangeLog $pointsChangeLog)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePointsChangeLog', array($pointsChangeLog));

        return parent::removePointsChangeLog($pointsChangeLog);
    }

    /**
     * {@inheritDoc}
     */
    public function getPointsChangeLog()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPointsChangeLog', array());

        return parent::getPointsChangeLog();
    }

    /**
     * {@inheritDoc}
     */
    public function addDoNotEmailEntry(\Mautic\EmailBundle\Entity\DoNotEmail $doNotEmail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDoNotEmailEntry', array($doNotEmail));

        return parent::addDoNotEmailEntry($doNotEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDoNotEmailEntry(\Mautic\EmailBundle\Entity\DoNotEmail $doNotEmail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDoNotEmailEntry', array($doNotEmail));

        return parent::removeDoNotEmailEntry($doNotEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getDoNotEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDoNotEmail', array());

        return parent::getDoNotEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setInternal($internal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInternal', array($internal));

        return parent::setInternal($internal);
    }

    /**
     * {@inheritDoc}
     */
    public function getInternal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInternal', array());

        return parent::getInternal();
    }

    /**
     * {@inheritDoc}
     */
    public function setSocialCache($cache)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSocialCache', array($cache));

        return parent::setSocialCache($cache);
    }

    /**
     * {@inheritDoc}
     */
    public function getSocialCache()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSocialCache', array());

        return parent::getSocialCache();
    }

    /**
     * {@inheritDoc}
     */
    public function setFields($fields)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFields', array($fields));

        return parent::setFields($fields);
    }

    /**
     * {@inheritDoc}
     */
    public function getFields($ungroup = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFields', array($ungroup));

        return parent::getFields($ungroup);
    }

    /**
     * {@inheritDoc}
     */
    public function addUpdatedField($alias, $value, $oldValue = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUpdatedField', array($alias, $value, $oldValue));

        return parent::addUpdatedField($alias, $value, $oldValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedFields()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedFields', array());

        return parent::getUpdatedFields();
    }

    /**
     * {@inheritDoc}
     */
    public function getColor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getColor', array());

        return parent::getColor();
    }

    /**
     * {@inheritDoc}
     */
    public function setColor($color)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setColor', array($color));

        return parent::setColor($color);
    }

    /**
     * {@inheritDoc}
     */
    public function isAnonymous()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAnonymous', array());

        return parent::isAnonymous();
    }

    /**
     * {@inheritDoc}
     */
    public function isNewlyCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isNewlyCreated', array());

        return parent::isNewlyCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setNewlyCreated($newlyCreated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNewlyCreated', array($newlyCreated));

        return parent::setNewlyCreated($newlyCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotes', array());

        return parent::getNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function setPreferredProfileImage($source)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreferredProfileImage', array($source));

        return parent::setPreferredProfileImage($source);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreferredProfileImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreferredProfileImage', array());

        return parent::getPreferredProfileImage();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateIdentified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateIdentified', array());

        return parent::getDateIdentified();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateIdentified($dateIdentified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateIdentified', array($dateIdentified));

        return parent::setDateIdentified($dateIdentified);
    }

    /**
     * {@inheritDoc}
     */
    public function checkDateIdentified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkDateIdentified', array());

        return parent::checkDateIdentified();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastActive', array());

        return parent::getLastActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastActive($lastActive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastActive', array($lastActive));

        return parent::setLastActive($lastActive);
    }

    /**
     * {@inheritDoc}
     */
    public function setAvailableSocialFields(array $availableSocialFields)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvailableSocialFields', array($availableSocialFields));

        return parent::setAvailableSocialFields($availableSocialFields);
    }

    /**
     * {@inheritDoc}
     */
    public function addTag(\Mautic\LeadBundle\Entity\Tag $tag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTag', array($tag));

        return parent::addTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTag(\Mautic\LeadBundle\Entity\Tag $tag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTag', array($tag));

        return parent::removeTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function getTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTags', array());

        return parent::getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function setTags($tags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTags', array($tags));

        return parent::setTags($tags);
    }

    /**
     * {@inheritDoc}
     */
    public function isPublished($checkPublishStatus = true, $checkCategoryStatus = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPublished', array($checkPublishStatus, $checkCategoryStatus));

        return parent::isPublished($checkPublishStatus, $checkCategoryStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getChanges()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChanges', array());

        return parent::getChanges();
    }

    /**
     * {@inheritDoc}
     */
    public function resetChanges()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'resetChanges', array());

        return parent::resetChanges();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAdded($dateAdded)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAdded', array($dateAdded));

        return parent::setDateAdded($dateAdded);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAdded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAdded', array());

        return parent::getDateAdded();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateModified($dateModified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateModified', array($dateModified));

        return parent::setDateModified($dateModified);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateModified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateModified', array());

        return parent::getDateModified();
    }

    /**
     * {@inheritDoc}
     */
    public function setCheckedOut($checkedOut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCheckedOut', array($checkedOut));

        return parent::setCheckedOut($checkedOut);
    }

    /**
     * {@inheritDoc}
     */
    public function getCheckedOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCheckedOut', array());

        return parent::getCheckedOut();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($createdBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', array($createdBy));

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', array());

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedBy($modifiedBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedBy', array($modifiedBy));

        return parent::setModifiedBy($modifiedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedBy', array());

        return parent::getModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setCheckedOutBy($checkedOutBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCheckedOutBy', array($checkedOutBy));

        return parent::setCheckedOutBy($checkedOutBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCheckedOutBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCheckedOutBy', array());

        return parent::getCheckedOutBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPublished($isPublished)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPublished', array($isPublished));

        return parent::setIsPublished($isPublished);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPublished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPublished', array());

        return parent::getIsPublished();
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishStatus', array());

        return parent::getPublishStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function isNew()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isNew', array());

        return parent::isNew();
    }

    /**
     * {@inheritDoc}
     */
    public function getCheckedOutByUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCheckedOutByUser', array());

        return parent::getCheckedOutByUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedByUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedByUser', array());

        return parent::getCreatedByUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedByUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedByUser', array());

        return parent::getModifiedByUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedByUser($createdByUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedByUser', array($createdByUser));

        return parent::setCreatedByUser($createdByUser);
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedByUser($modifiedByUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedByUser', array($modifiedByUser));

        return parent::setModifiedByUser($modifiedByUser);
    }

    /**
     * {@inheritDoc}
     */
    public function setCheckedOutByUser($checkedOutByUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCheckedOutByUser', array($checkedOutByUser));

        return parent::setCheckedOutByUser($checkedOutByUser);
    }

    /**
     * {@inheritDoc}
     */
    public function __call($name, $arguments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', array($name, $arguments));

        return parent::__call($name, $arguments);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

}
